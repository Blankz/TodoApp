//
//  TodoListProtocols.swift
//  Todo App
//
//  Created Blankz on 30/1/2564 BE.
//  Copyright Â© 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Blankz
//

import Foundation

//MARK: Wireframe -
protocol TodoListWireframeProtocol: class {
    func presentToDoDetail(todoItem: TodoItem)
    func presentLanding()
}
//MARK: Presenter -
protocol TodoListPresenterProtocol: class {
    var interactor: TodoListInteractorInputProtocol? { get set }
    var todoList: [TodoItem]? { get set }
    
    func didTapLogout()
    func performFetchTodoList()
    func performCreateTodo(form: TodoListItem.Request.CreateTodo)
    func didTapTodo(at index: Int)
    func performDeleteTodo(at index: Int)
}

//MARK: Interactor -
protocol TodoListInteractorOutputProtocol: class {

    func didReceive(List response: TodoListItem.Response.TodoList)
    func didReceive(todoItem response: TodoListItem.Response.CreateTodo)
    func didReceive(Error message: String)
    func didReceiveDeleteTodo(response: TodoListItem.Response.DeleteTodo, id: String)
    //
    func didReceiveLogout(response: TodoListItem.Response.Logout)
}

protocol TodoListInteractorInputProtocol: class {

    var presenter: TodoListInteractorOutputProtocol?  { get set }

    func fetchTodoList()
    func createTodo(form: TodoListItem.Request.CreateTodo)
    func deteteTodo(id: String)
    // User
    func logout()
}

//MARK: View -
protocol TodoListViewProtocol: class {

    var presenter: TodoListPresenterProtocol?  { get set }

    func displayAlert(message: String)
    func reloadTodoList()
}
