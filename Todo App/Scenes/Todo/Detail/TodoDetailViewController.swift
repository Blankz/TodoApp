//
//  TodoDetailViewController.swift
//  Todo App
//
//  Created Blankz on 30/1/2564 BE.
//  Copyright Â© 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Blankz
//

import UIKit

class TodoDetailViewController: UIViewController {
	var presenter: TodoDetailPresenterProtocol?

    private var svVertical: UIStackView!
    private var inputDescription: InputTextfieldView!
    private var inputComplete: InputCheckboxView!
    private var inputCreateAt: InputTextfieldView!
    private var inputUpdateAt: InputTextfieldView!
    
    private var isEdit: Bool = false
	override func viewDidLoad() {
        super.viewDidLoad()
        
        setupView()
    }
}

// MARK:- Setup View
private extension TodoDetailViewController {
    func setupView() {
        setupNavigation()
        setupBackground()
        setupStackView()
        setupLanguage()
    }
    
    func setupNavigation() {
        navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .edit,
                                                            target: self,
                                                            action: #selector(didTapEdit))
    }
    
    func setupBackground() {
        view.backgroundColor = .white
    }
    
    func setupStackView() {
        inputDescription = InputTextfieldView()
        inputDescription.isEditing = false
        
        inputComplete = InputCheckboxView()
        
        inputCreateAt = InputTextfieldView()
        inputCreateAt.isEditing = false
        
        inputUpdateAt = InputTextfieldView()
        inputUpdateAt.isEditing = false
        
        svVertical = UIStackView(arrangedSubviews: [inputDescription,
                                                    inputComplete,
                                                    inputCreateAt,
                                                    inputUpdateAt])
        svVertical.translatesAutoresizingMaskIntoConstraints = false
        svVertical.axis = .vertical
        svVertical.distribution = .fill
        svVertical.alignment = .fill
        svVertical.spacing = 16
        view.addSubview(svVertical)
        
        setLoginConstraints()
    }
    
    func setLoginConstraints() {
        let dic: [String: AnyObject] = ["svVertical": svVertical]
        var constraints = NSLayoutConstraint.constraints(withVisualFormat: "V:|-24-[svVertical]", options: [], metrics: nil, views: dic)
        constraints += NSLayoutConstraint.constraints(withVisualFormat: "H:|-32-[svVertical]-32-|", options: [], metrics: nil, views: dic)
        NSLayoutConstraint.activate(constraints)
    }
    
    func setupLanguage() {
        title = "Detail"
        
        inputDescription.set(title: "Description")
        inputComplete.set(title: "Complete")
        inputCreateAt.set(title: "CreatedAt")
        inputUpdateAt.set(title: "UpdatedAt")
        
        let todo = presenter!.todoItem
        
        inputDescription.text = todo!.description
        inputComplete.isComplete = todo!.isComplete
        inputCreateAt.text = todo!.createdAt
        inputUpdateAt.text = todo!.updatedAt
    }
}
//MARK: - Update
private extension TodoDetailViewController {
    func changeToEditing() {
        navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .save,
                                                            target: self,
                                                            action: #selector(didTapSave))
        
        inputDescription.isEditing = true
        inputComplete.isEditing = true
    }
}

//MARK: - TodoDetailViewProtocol
extension TodoDetailViewController: TodoDetailViewProtocol {
    
}

//MARK: - Action
private extension TodoDetailViewController {
    @objc func didTapEdit() {
        changeToEditing()
    }
    
    @objc func didTapSave() {
        view.endEditing(true)
        
        let form = TodoDetailItem.Request.UpdateTodo(id: presenter?.todoItem?.id ?? "",
                                                     description: inputDescription.text,
                                                     isCompleted: inputComplete.isComplete)
        
        presenter?.performSave(form: form)
    }
}
