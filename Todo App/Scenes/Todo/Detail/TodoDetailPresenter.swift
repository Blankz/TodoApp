//
//  TodoDetailPresenter.swift
//  Todo App
//
//  Created Blankz on 30/1/2564 BE.
//  Copyright Â© 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Blankz
//

import UIKit

class TodoDetailPresenter: TodoDetailPresenterProtocol {
    weak private var view: TodoDetailViewProtocol?
    var interactor: TodoDetailInteractorInputProtocol?
    private let router: TodoDetailWireframeProtocol
    weak var delegate: TodoListDelegate?
    
    var todoItem: TodoItem?

    init(interface: TodoDetailViewProtocol,
         interactor: TodoDetailInteractorInputProtocol?,
         router: TodoDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func performSave(form: TodoDetailItem.Request.UpdateTodo) {
        var form = form
        
        if form.description == todoItem?.description {
            form.description = nil
        }
        
        if form.isCompleted == todoItem?.isComplete {
            form.isCompleted = nil
        }

        if form.description != nil || form.isCompleted != nil {
            interactor?.updateTodo(from: form)
        }
    }
}

extension TodoDetailPresenter: TodoDetailInteractorOutputProtocol {
    func didReceive(todoItem response: TodoDetailItem.Response.Update) {
        todoItem = response.todo
        delegate?.didUpdateTodo(todo: response.todo)
    }
    
    func didReceive(Error message: String) {
        view?.displayAlert(message: message)
    }
}
